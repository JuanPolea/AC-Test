buildscript {
    repositories {
        google()
        mavenCentral()
        maven {
            url "https://dl.bintray.com/kotlin/kotlinx"
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.3.0'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.0'
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.51'
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.9.21'
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.20.0"
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.9'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.51.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
plugins {
    id 'com.android.application' version '8.3.0' apply false
    id 'com.android.library' version '8.3.0' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.22' apply false
}

subprojects { subProject ->
    subProject.apply plugin: 'kotlin-kapt'
    subProject.apply plugin: "com.github.ben-manes.versions"
    subProject.apply plugin: 'io.gitlab.arturbosch.detekt'

    detekt {
        debug = false
        toolVersion = "1.20.0"
        input = subProject.files("src")
        config = files("$rootDir/config/detekt/detekt.yml")

        reports {
            xml.enabled = false
            txt.enabled = false
            html.enabled = true
        }
    }

    configurations.configureEach {
        resolutionStrategy.force 'org.objenesis:objenesis:2.6'
    }

    afterEvaluate {

        if (it.hasProperty('android')) {
            android {
                compileSdkVersion libs.versions.compileSdk.get().toInteger()
                buildToolsVersion libs.versions.buildToolsVersion.get()

                defaultConfig {
                    minSdk libs.versions.minSdk.get().toInteger()
                    targetSdk libs.versions.targetSdk.get().toInteger()
                    versionCode libs.versions.versionCode.get().toInteger()
                    versionName libs.versions.versionName.get()
                    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
                }
                buildTypes {
                    release {
                        minifyEnabled false
                        proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
                    }
                }
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_20
                    targetCompatibility JavaVersion.VERSION_20
                }

                testOptions {
                    unitTests.returnDefaultValues = true
                    unitTests.includeAndroidResources = true
                }
                sourceSets {
                    test {
                        resources {
                            srcDirs += ["${rootDir}/test/src/test/resources"]
                        }
                    }
                }
                packagingOptions {
                    exclude 'META-INF/*'
                }
            }
            dependencies {
                testImplementation libs.kotlinx.coroutines.core
                testImplementation libs.kotlinx.coroutines.test
                testImplementation libs.junit
                testImplementation libs.mockk
                implementation libs.timber
            }
        }
    }
}
